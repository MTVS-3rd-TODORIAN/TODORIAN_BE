plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.8'
    id 'io.spring.dependency-management' version '1.1.6'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // Querydsl 플러그인 사용 처리
}

group = 'com.todorian'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // 스프링 부트 웹 어플리케이션 개발을 위한 필수 의존성
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // 시큐리티 관련
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // JWT 토큰 관련
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // QueryDSL 설정
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // 메일 관련
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // (배포용) 사용할 MariaDB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // (테스트용) H2 데이터베이스
    runtimeOnly 'com.h2database:h2'

    // 테스트 기능
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:4.8.0'

    // swagger-ui
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2")

    // 모니터링 용
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // 유효성 검사
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // 날짜/시간 유형 직렬화
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.0'

    // 개발 편의용
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // mysql
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'

}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 프로젝트 build Directory 설정
def generated = "${project.buildDir}/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = generated
}

sourceSets {
    main.java.srcDir generated
}

// compileQuerydsl Task 실행시 clean + compileQuerydsl 할 수 있도록 동작 변경
tasks.register('cleanGenerated', Delete) {
    delete generated
}

clean.dependsOn(cleanGenerated)

tasks.named("compileQuerydsl").configure {
    dependsOn(clean)
}


compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}